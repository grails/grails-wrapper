buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        if(groovyVersion.endsWith('-SNAPSHOT')) {
            maven {
                name 'JFrog OSS snapshot repo'
                url 'https://oss.jfrog.org/oss-snapshot-local/'
            }
        }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

group 'org.grails'
version '3.0.0.BUILD-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'provided-base'

ext {
    grailsVersion = project.grailsVersion
    userOrg = 'grails'
    repo = 'grails-core'
}

configurations {
    groovyDoc.extendsFrom runtimeClasspath
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    if(groovyVersion.endsWith('-SNAPSHOT')) {
        maven {
            name 'JFrog OSS snapshot repo'
            url 'https://oss.jfrog.org/oss-snapshot-local/'
        }
    }
}

dependencies {
    implementation "org.codehaus.groovy:groovy:$groovyVersion"
    implementation "org.springframework.boot:spring-boot-cli:$springBootVersion"
    implementation "org.codehaus.groovy:groovy-ant:$groovyVersion"
}

jar {
    from {
        (configurations.runtimeClasspath).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'grails.init.RunCommand'
    }
}

task sourcesJar(type:Jar) {
    archiveClassifier.set('sources')
    from project.sourceSets.main.allSource
}

task javadocJar(type:Jar) {
    archiveClassifier.set('javadoc')
    from groovydoc.outputs
}

tasks.withType(Groovydoc) {
    groovyClasspath = project.configurations.groovyDoc
    includes  = ["grails-wrapper/**"]
}

// Used for publishing to central repository, remove if not needed
apply from:'../publishing/grailsCentralPublishing.gradle'
apply from:'../publishing/bintrayPublishing.gradle'


